{"version":3,"sources":["component/ContactList/ContactList.module.scss","component/Filter/Filter.module.scss","redux/contacts-actions.js","redux/contacts-operation.js","redux/contacts-selectors.js","component/ContactForm/ContactForm.js","component/Filter/Filter.js","component/ContactList/ContactList.js","App.js","redux/contacts-reduser.js","redux/store.js","reportWebVitals.js","index.js","component/ContactForm/ContactForm.module.scss"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","axios","defaults","baseURL","name","number","dispatch","a","contact","post","data","id","delete","then","catch","error","get","getFilter","state","contacts","filter","getLoading","loading","getVisibleContacts","createSelector","items","normalizedFilter","toLowerCase","includes","connect","onSubmit","contactsOperations","useState","setName","setNumber","handleChange","e","target","value","preventDefault","className","styles","container","label","htmlFor","uuidv4","input","type","onChange","pattern","title","required","contactsSelectors","onDeleteContacts","ul","map","li","button","onClick","fetchContacts","useDispatch","useEffect","createReducer","_","payload","some","alert","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReduser","devTools","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49ac5442.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__1j9WI\",\"ul\":\"ContactList_ul__2EeAm\",\"button\":\"ContactList_button__2T5vq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3N8Xo\",\"input\":\"Filter_input__1zlxa\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\nexport const addContactsError = createAction('contacts/addContactsError');\n\nexport const deleteContactsRequest = createAction(\n  'contacts/deleteContactsRequest',\n);\nexport const deleteContactsSuccess = createAction(\n  'contacts/deleteContactsSuccess',\n);\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\n\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nconst addContacts =\n  ({ name, number }) =>\n  async dispatch => {\n    const contact = {\n      name,\n      number,\n    };\n    dispatch(addContactsRequest());\n\n    try {\n      const { data } = await axios.post('/contacts', contact);\n      dispatch(addContactsSuccess(data));\n    } catch (error) {\n      dispatch(addContactsError(error));\n    }\n  };\n\nconst deleteContacts = id => async dispatch => {\n  dispatch(deleteContactsRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactsSuccess(id)))\n    .catch(error => dispatch(deleteContactsError(error)));\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  addContacts,\n  deleteContacts,\n  fetchContacts,\n};\n\n// const fetchContacts = () =>  dispatch => {\n//     dispatch(fetchContactsRequest());\n\n//     axios\n//         .get('/contacts')\n//         .then(({ data }) =>\n//             dispatch(fetchContactsSuccess(data)))\n//         .catch(error => dispatch(fetchContactsError(error)));\n\n// };\n\n// const addContacts = ({name, number}) => dispatch => {\n//     const contact = {\n//         name,\n//         number,\n//     };\n//     dispatch(addContactsRequest());\n\n//     axios\n//         .post('/contacts', contact)\n//         .then(({ data }) =>\n//             dispatch(addContactsSuccess(data)))\n//         .catch(error => dispatch(addContactsError(error)));\n\n// };\n\n// const deleteContacts = id => dispatch => {\n//     dispatch(deleteContactsRequest(id));\n//     axios\n//         .delete(`/contacts/${id}`)\n//         .then(() =>\n//             dispatch(deleteContactsSuccess(id)))\n//         .catch(error => dispatch(deleteContactsError(error)));\n\n// }\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contacts.loading;\nconst getFilter = state => state.contacts.filter;\nconst getAllContacts = state => state.contacts.items;\n\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n// const getVisibleContacts = state => {\n//   const filter = getFilter(state);\n//   const normalizedFilter = filter.toLowerCase();\n//   const allContacts = getAllContacts(state);\n//   return allContacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getLoading,\n  getFilter,\n  getVisibleContacts,\n};\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.scss';\nimport { connect } from 'react-redux';\nimport { contactsOperations } from '../../redux';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={styles.container}>\n        <label className={styles.label} htmlFor={uuidv4()}>\n          Name{' '}\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            id={uuidv4()}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            id={uuidv4()}\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n      </div>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsOperations.addContacts(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.scss';\nimport { connect } from 'react-redux';\nimport { contactsSelectors, changeFilter } from '../../redux';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.label}>\n    Find contacts by name\n    <input\n      className={styles.input}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.scss';\nimport { connect } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => {\n  return (\n    <ul className={styles.ul}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.li} name={name} key={id}>\n          {name}: {number}\n          <button\n            className={styles.button}\n            type=\"button\"\n            onClick={() => onDeleteContacts(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContacts: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContacts: id => dispatch(contactsOperations.deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import ContactForm from './component/ContactForm';\nimport Filter from './component/Filter';\nimport ContactList from './component/ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from './redux';\nimport { connect } from 'react-redux';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n  return (\n    <>\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\nexport default connect(null, mapDispatchToProps)(App);\n\n// export default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, { payload }) => {\n    const repeatСontact = state.some(contact => contact.name === payload.name);\n    if (repeatСontact) {\n      alert(`${payload.name} is already in contacts.`);\n      return state;\n    }\n    const contactsState = [...state, payload];\n    return contactsState;\n  },\n\n  [deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSuccess]: () => false,\n  [deleteContactsError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [fetchContactsRequest]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import contactsReduser from './contacts-reduser';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\n// const contactsPersistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReduser,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store };\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__2ZJgB\",\"input\":\"ContactForm_input__2g16E\"};"],"sourceRoot":""}
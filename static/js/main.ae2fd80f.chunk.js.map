{"version":3,"sources":["component/ContactList/ContactList.module.scss","component/Filter/Filter.module.scss","redux/contacts-actions.js","redux/contacts-operation.js","component/ContactForm/ContactForm.js","redux/contacts-selectors.js","component/Filter/Filter.js","component/ContactList/ContactList.js","App.js","redux/contacts-reduser.js","redux/store.js","reportWebVitals.js","index.js","component/ContactForm/ContactForm.module.scss"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","axios","defaults","baseURL","name","number","dispatch","contact","post","then","data","id","a","delete","catch","error","connect","onSubmit","contactsOperations","useState","setName","setNumber","handleChange","e","target","value","preventDefault","className","styles","container","label","htmlFor","uuidv4","input","type","onChange","pattern","title","required","getFilter","state","contacts","filter","normalizedFilter","toLowerCase","getAllContacts","includes","contactsSelectors","onDeleteContacts","ul","map","li","button","onClick","App","createReducer","_","payload","some","alert","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReduser","devTools","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae2fd80f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__1j9WI\",\"ul\":\"ContactList_ul__2EeAm\",\"button\":\"ContactList_button__2T5vq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3N8Xo\",\"input\":\"Filter_input__1zlxa\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n\r\n\r\nexport const fetchContactsRequest = createAction(\"contacts/fetchContactsRequest\");\r\nexport const fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\r\nexport const fetchContactsError= createAction(\"contacts/fetchContactsError\");\r\n\r\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\r\nexport const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\r\nexport const addContactsError= createAction(\"contacts/addContactsError\");\r\n\r\nexport const deleteContactsRequest = createAction(\"contacts/deleteContactsRequest\");\r\nexport const deleteContactsSuccess = createAction(\"contacts/deleteContactsSuccess\");\r\nexport const deleteContactsError = createAction(\"contacts/deleteContactsError\");\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\n","\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactsRequest,\r\n    addContactsSuccess,\r\n    addContactsError,\r\n    deleteContactsRequest,\r\n    deleteContactsSuccess,\r\n    deleteContactsError,\r\n   \r\n} from './contacts-actions';\r\n\r\n\r\naxios.defaults.baseURL = 'http://localhost: 4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n\r\n    try {\r\n        const { data } = await axios.get('/contacts');\r\n        dispatch(fetchContactsSuccess(data));\r\n\r\n    } catch (error) {\r\n        dispatch(fetchContactsError(error));\r\n    };       \r\n};\r\n\r\nconst addContacts = ({name, number}) => dispatch => {\r\n    const contact = {\r\n        name,\r\n        number,\r\n    };\r\n    dispatch(addContactsRequest());\r\n    \r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) =>dispatch(addContactsSuccess(data)))\r\n        // .catch(error => dispatch(addContactsError(error)));\r\n    \r\n};\r\n\r\n\r\n\r\n// const addContacts = ({name, number}) => async dispatch => {\r\n//     const contact = {\r\n//         name,\r\n//         number,\r\n//     };\r\n//     dispatch(addContactsRequest());\r\n\r\n//     try {\r\n//         const { data } = await axios.post('/contacts', contact);\r\n//         dispatch(addContactsSuccess(data));\r\n\r\n//     } catch (error) {\r\n//         dispatch(addContactsError(error));\r\n//     };     \r\n// };\r\n\r\n\r\n\r\nconst deleteContacts = id => async dispatch => {\r\n    dispatch(deleteContactsRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() =>\r\n            dispatch(deleteContactsSuccess(id)))\r\n        .catch(error => dispatch(deleteContactsError(error)));\r\n    \r\n};\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    addContacts,\r\n    deleteContacts,\r\n    fetchContacts,\r\n};\r\n\r\n\r\n\r\n// const fetchContacts = () =>  dispatch => {\r\n//     dispatch(fetchContactsRequest());\r\n\r\n//     axios\r\n//         .get('/contacts')\r\n//         .then(({ data }) =>\r\n//             dispatch(fetchContactsSuccess(data)))\r\n//         .catch(error => dispatch(fetchContactsError(error)));\r\n    \r\n// };\r\n\r\n// const addContacts = ({name, number}) => dispatch => {\r\n//     const contact = {\r\n//         name,\r\n//         number,\r\n//     };\r\n//     dispatch(addContactsRequest());\r\n    \r\n//     axios\r\n//         .post('/contacts', contact)\r\n//         .then(({ data }) =>\r\n//             dispatch(addContactsSuccess(data)))\r\n//         .catch(error => dispatch(addContactsError(error)));\r\n    \r\n// };\r\n\r\n\r\n\r\n// const deleteContacts = id => dispatch => {\r\n//     dispatch(deleteContactsRequest(id));\r\n//     axios\r\n//         .delete(`/contacts/${id}`)\r\n//         .then(() =>\r\n//             dispatch(deleteContactsSuccess(id)))\r\n//         .catch(error => dispatch(deleteContactsError(error)));\r\n    \r\n// }","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactForm.module.scss\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport  contactsOperations from \"../../redux/contacts-operation\";\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className={styles.container}>\r\n        <label className={styles.label} htmlFor={uuidv4()}>\r\n          Name{\" \"}\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            id={uuidv4()}\r\n            onChange={handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            id={uuidv4()}\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsOperations.addContacts(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getAllContacts = state => state.contacts.contacts;\r\n\r\n\r\n// const getVisibleContacts = createSelector(\r\n//   [getAllContacts, getFilter],\r\n//   (contacts, filter) => {\r\n//     const normalizedFilter = filter.toLowerCase();\r\n\r\n//     return contacts.filter(({ name }) =>\r\n//       name.toLowerCase().includes(normalizedFilter),\r\n//     );\r\n//   },\r\n// );\r\n\r\nconst getVisibleContacts = state => {\r\n    const filter = getFilter(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n    const allContacts = getAllContacts(state);\r\n      return allContacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    getLoading,\r\n    getFilter,\r\n    getVisibleContacts,\r\n}","import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/contacts-actions\";\r\nimport contactsSelectors from '../../redux/contacts-selectors';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\n// Filter.propTypes = {\r\n//   value: PropTypes.string.isRequired,\r\n//   onChange: PropTypes.func.isRequired,\r\n// };\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsOperations from \"../../redux/contacts-operation\";\r\nimport contactsSelectors from '../../redux/contacts-selectors';\r\n\r\nconst ContactList = ({ contacts, onDeleteContacts }) => {\r\n  return (\r\n    <ul className={styles.ul}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={styles.li} name={name} key={id}>\r\n          {name}: {number}\r\n          <button\r\n            className={styles.button}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContacts(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  onDeleteContacts: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContacts: id =>\r\n    dispatch(contactsOperations.deleteContacts(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","\r\nimport ContactForm from \"./component/ContactForm\";\r\nimport Filter from \"./component/Filter\";\r\nimport ContactList from \"./component/ContactList\";\r\n// import contactsOperations from \"./redux/contacts-operation\";\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  //   const dispatch = useDispatch();\r\n\r\n  // useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n// });\r\n// export default connect(null, mapDispatchToProps)(App);\r\n\r\n\r\nexport default App;\r\n\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n// import actions from \"./contacts-actions\";\r\n// import actionsOperations from \"./contacts-operation\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  changeFilter\r\n} from './contacts-actions';\r\n\r\n\r\n\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  // [addContactsSuccess]: (state, { payload }) => [...state, payload],\r\n  [addContactsSuccess]: (state, { payload }) => {\r\n    const repeatСontact = state.some(\r\n      (contact) => contact.name === payload.name\r\n    );\r\n    if (repeatСontact) {\r\n      alert(`${payload.name} is already in contacts.`);\r\n      return state;\r\n    }\r\n    const contactsState = [...state, payload];\r\n    return contactsState;\r\n  },\r\n\r\n  [deleteContactsSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactsRequest]: () => true,\r\n  [addContactsSuccess]: () => false,\r\n  [addContactsError]: () => false,\r\n  [deleteContactsRequest]: () => true,\r\n  [deleteContactsSuccess]: () => false,\r\n  [deleteContactsError]: () => false,  \r\n})\r\n\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [fetchContactsRequest]: () => null,\r\n  \r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import contactsReduser from \"./contacts-reduser\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\n// const contactsPersistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReduser,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store};\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>     \r\n        <App />     \r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__2ZJgB\",\"input\":\"ContactForm_input__2g16E\"};"],"sourceRoot":""}